<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	                    http://www.springframework.org/schema/beans/spring-beans.xsd
	                    http://www.springframework.org/schema/context
	                    http://www.springframework.org/schema/context/spring-context.xsd
	                    http://www.springframework.org/schema/aop
	                    http://www.springframework.org/schema/aop/spring-aop.xsd">
	                    
	<bean id="test1" class="kr.bit.beans.Test"/>
	<bean id="advisor1" class="kr.bit.advisor.AdvisorClass"/>
	
	<aop:config>
		<aop:aspect ref="advisor1">
			<aop:pointcut expression="execution(* Test())" id="point1"/><!-- 관심사함수 모듈화 -->
			<!-- 등록한 함수를 시점으로 어떤 함수를 호출할 것인지 지정(스케쥴링) -->
			<aop:before method="beforeMethod" pointcut-ref="point1"/><!-- 관심사 전에 함수 호출 -->
			<aop:after method="afterMethod" pointcut-ref="point1"/>
			<aop:around method="aroundMethod" pointcut-ref="point1"/>
			<aop:after-returning method="afterReturningMethod" pointcut-ref="point1"/>
		</aop:aspect>
	</aop:config>
</beans>